#!/bin/bash
#=======================================================================
#DP320X240 DP480X320 DL122X32
DISPLAY_TYPE_CHOICES="hitachi_qvga sharp_qvga okaya_qvga okaya_480x272 hitachi_hvga hitachi_wvga sharp_vga qvga_portrait lcd_svga crt800x600 crt1024x768 hitachi_92 tovis_w hitachi_154"
PLATFORM_TYPE_CHOICES="MERCURY NEONB NEON NEON270 HALOGEN ARGON BD2003 GAME_WITH_SMC GAME_CONTROLLER"
# BOUNDARY_OLD_BOARD  #lcd pin reordering for rgb problem, don't use VLIO(gp18 is turnstile)
# OLD_GAME_CONTROLLER GAME_CONTROLLER_PLAITED_A1 
REVISION_CHOICES="1 2"

SOFTWARE_TYPE_CHOICES="WINCE LINUX GAME"
INCLUDE_MINIDEBUG_CHOICES="y n"
CPU_CLOCK_CHOICES="100 200 300 400"
CPU_CLOCK_PXA270_CHOICES="104 208 312 416 520 624"
CPU_CLOCK_IMX31_CHOICES="100 104 200 208 300 312 400 416 500 520 600 624"

CONFIG_H=include/configs/select.h
CONFIG_MK=select.mk
CONFIG_LOG=select.log

fail ()
{
    echo ""
    echo "Configuration failed."
    echo ""
    exit 1
}

if [ -f $CONFIG_MK ] ; then
. ./$CONFIG_LOG
fi



#=======================================================================


arg () {
    VALUE="`echo X"$2" | sed -e 's/^X--[a-zA-Z_]*=//'`"
    eval $1=\"$VALUE\"
	eval $1_P='y'
}

usage () {
    echo "bad parameters"
    exit 1
}

while [ $# -gt 0 ] ; do
    case "$1" in
    --DISPLAY_TYPE=*)		arg DISPLAY_TYPE $1 		;;
    --PLATFORM_TYPE=*)		arg PLATFORM_TYPE $1		;;
    --SOFTWARE_TYPE=*)		arg SOFTWARE_TYPE $1		;;
    --INCLUDE_MINIDEBUG=*)	arg INCLUDE_MINIDEBUG $1	;;
    --CPU_CLOCK=*)			arg CPU_CLOCK $1			;;
    *)			usage			;;
    esac
    shift
done

#=======================================================================

write_str () {
    value=`eval echo '$'$1`
    echo "$1=$value" >> $CONFIG_MK
    echo "$1=\"$value\"" >> $CONFIG_LOG
    if [ x$3 != x ] ; then
		choices=`eval echo '$'$2`
		str=""
		for a in $choices ; do
			if [ -n "$str" ] ; then str="$str && " ; fi
			str="$str!defined($3$a)";
		done
    	echo "#if $str" >> $CONFIG_H
	    echo "#define $3$value" >> $CONFIG_H
		echo "#endif" >> $CONFIG_H
	else
		echo "#ifndef $1" >> $CONFIG_H
	    echo "#define $1 $value" >> $CONFIG_H
		echo "#endif" >> $CONFIG_H
	fi
}

prompt () {
    eval $3=\"$2\"
	/bin/echo -e "$1 [$2]: \c"
	read tmp
	if [ -n "$tmp" ] ; then eval $3=\"$tmp\" ; fi
	if [ ! -t 1 ] ; then echo $3 ; fi
}
noprompt () {
    eval $3=\"$2\"
	/bin/echo -e "$1 [$2]: "
	if [ ! -t 1 ] ; then echo $3 ; fi
}


ask_str () {
	choices=`eval echo '$'$3`
	default=`eval echo '$'$2`
	ppp=`eval echo '$'$2_P`
	ans=""
	stop="0"
	if [ x$ppp = x"y" ] ; then
		noprompt "$1 ($choices)" "$default" answer
		for a in $choices ; do
			if [ x$a = x$answer ] ; then ans=$a; stop="1"; break; fi;
		done
		if [ $stop != "1" ] ; then default=""; fi;
	fi
	while [ $stop != "1" ] ; do
		prompt "$1 ($choices)" "$default" answer
		for a in $choices ; do
			if [ x$a = x$answer ] ; then ans=$a; stop="1"; break; fi;
		done
	done
	eval $2=\"$ans\"
}
#=======================================================================

echo ""
echo "    -------- U-Boot Boundary Devices Specific Configuration Script --------"
echo ""
echo ""

ask_str "Choose display type" DISPLAY_TYPE DISPLAY_TYPE_CHOICES
ask_str "Choose hardware type" PLATFORM_TYPE PLATFORM_TYPE_CHOICES
	if [ x$PLATFORM_TYPE = xHALOGEN ] ; then
ask_str "Choose hardware revision" PLATFORM_REV REVISION_CHOICES
	fi
ask_str "Choose software type" SOFTWARE_TYPE SOFTWARE_TYPE_CHOICES
ask_str "Include minidebug" INCLUDE_MINIDEBUG INCLUDE_MINIDEBUG_CHOICES

	if [ x$PLATFORM_TYPE = xNEON270 ] ; then
ask_str "CPU clock" CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xARGON ] ; then
ask_str "CPU clock" CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xHALOGEN ] ; then
ask_str "CPU clock" CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xMERCURY ] ; then
ask_str "CPU clock" CPU_CLOCK CPU_CLOCK_IMX31_CHOICES
	else
ask_str "CPU clock" CPU_CLOCK CPU_CLOCK_CHOICES
	fi
	fi
	fi
	fi

rm -f $CONFIG_H $CONFIG_MK

cat << 'EOF' > $CONFIG_H
/*
  Automatically generated by 'make xxx_config' -- don't edit!
*/
#include <asm/platformTypes.h>
EOF

cat << 'EOF' > $CONFIG_MK
#
# Automatically generated by 'make xxx_config' -- don't edit!
#
EOF

cat << 'EOF' > $CONFIG_LOG
#!/bin/bash
EOF

chmod 777 $CONFIG_LOG

write_str DISPLAY_TYPE DISPLAY_TYPE_CHOICES
write_str PLATFORM_TYPE PLATFORM_TYPE_CHOICES
	if [ x$PLATFORM_TYPE = xHALOGEN ] ; then
write_str PLATFORM_REV REVISION_CHOICES
	fi
write_str SOFTWARE_TYPE SOFTWARE_TYPE_CHOICES
write_str INCLUDE_MINIDEBUG INCLUDE_MINIDEBUG_CHOICES

	if [ x$PLATFORM_TYPE = xNEON270 ] ; then
write_str CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xARGON ] ; then
write_str CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xHALOGEN ] ; then
write_str CPU_CLOCK CPU_CLOCK_PXA270_CHOICES
	else
	if [ x$PLATFORM_TYPE = xMERCURY ] ; then
write_str CPU_CLOCK CPU_CLOCK_IMX31_CHOICES
	else
write_str CPU_CLOCK CPU_CLOCK_CHOICES
	fi
	fi
	fi
	fi
echo "Configuration successful."
